var util = require('util');
var API = require('./base.js');
var fns = require('./functions')

var CommentAPI = function(appID, host, category) {
    API.call(this, appID, host);
    this._version = '3';
    this._missing('category', category);
    this._category = category;
};

util.inherits(CommentAPI, API);

function getUrl () {
    this._check('_host', '_appID', '_version');
    return [this._host, this._version].concat([].slice.call(arguments)).join('/');
};
/**
 *  返回request的qs选项，第三版默认加上_app_id
 *  @override base._getRequestParams
 *  @returns {Object}
 */
CommentAPI.prototype._getRequestParams = function() {
    this._params._app_id = this._appID;
    return this._params;
};

/**
 * 获取单条评论
 * @param thread {String}
 * @returns {Promise}
 */
CommentAPI.prototype.get = function(commentID) {
    this._missing('commentID', commentID);
    return this.request({
        method: 'GET',
        url: getUrl.call(this, 'discuss', 'comments', commentID)
    });
};

/**
 * 获取评论
 * @param thread {String}
 * @returns {Promise}
 */
CommentAPI.prototype.list = function(thread) {
    this._missing('thread', thread);
    return this.request({
        method: 'GET',
        url: getUrl.call(this, 'discuss', 'categories', this._category, 'threads', thread, 'comments')
    });
};

/**
 * 发表评论
 * @param thread {String}
 * @returns {Promise}
 */
CommentAPI.prototype.post = function(thread) {
    this._missing('thread', thread);
    return this.request({
        method: 'POST',
        url: getUrl.call(this, 'discuss', 'categories', this._category, 'threads', thread, 'comments')
    });
};


/**
 * 回复评论
 * @param thread {String}
 * @param commentID {String}
 * @returns {Promise}
 */
CommentAPI.prototype.reply = function(thread, commentID) {
    this._missing('thread', thread);
    this._missing('commentID', commentID);
    return this.request({
        method: 'POST',
        url: getUrl.call(this, 'discuss', 'categories', this._category, 'threads', thread, 'comments', commentID, 'actions', 'reply')
    });
};

/**
 * 赞评论
 * @param thread {String}
 * @param commentID {String}
 * @returns {Promise}
 */
CommentAPI.prototype.like = function(thread, commentID) {
    this._missing('thread', thread);
    this._missing('commentID', commentID);
    return this.request({
        method: 'POST',
        url: getUrl.call(this, 'discuss', 'categories', this._category, 'threads', thread, 'comments', commentID, 'actions', 'like')
    });
};

module.exports = CommentAPI;